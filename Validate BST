/*
Check wheather the tree is BST or not 
*/

#include <bits/stdc++.h> 
/*************************************************************
    Following is the Binary Tree node structure

    template <typename T>
    class BinaryTreeNode 
    {
      public : 
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) 
        {
            this -> data = data;
            left = NULL;
            right = NULL;
        }

        ~BinaryTreeNode() 
        {
            if (left)
            {
                delete left;
            }
            if (right)
            {
                delete right;
            }
        }
    };

*************************************************************/

bool isBST(BinaryTreeNode<int>* root, int min,int max)
{
    //base condition

    if(root == NULL)
    return true;
    
    //if data on left is less then minimum and data on right is greater then maximum then keep calling the function else return false
    
    if(root->data > min && root->data <max)
    {
        bool left = isBST(root->left,min,root->data);
        bool right = isBST(root->right,root->data,max);
        return left && right;
    }
    else
    return false;

}



bool validateBST(BinaryTreeNode<int>* root) 
{
    return isBST(root,INT_MIN,INT_MAX);
}
