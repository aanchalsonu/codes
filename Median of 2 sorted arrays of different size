/*

Given two sorted arrays array1 and array2 of size m and n respectively. Find the median of the two sorted arrays.

Example 1:

Input:
m = 3, n = 4
array1[] = {1,5,9}
array2[] = {2,3,6,7}
Output: 5
Explanation: The middle element for
{1,2,3,5,6,7,9} is 5
Example 2:

Input:
m = 2, n = 4
array1[] = {4,6}
array2[] = {1,2,3,5}
Output: 3.5

*/

//{ Driver Code Starts
//Initial Template for C++

#include <bits/stdc++.h>
using namespace std;
double MedianOfArrays(vector<int>& array1, vector<int>& array2);


// } Driver Code Ends
//User function Template for C++

class Solution{
    public:
    
//     double find_median(vector<int> v)
// 		{
// 		  //  sort(v.begin(),v.end());
// 		    int n = v.size();
// 		    if(n%2 != 0)
// 		    return v[n/2];
// 		    else
// 		    {
		        
// 		        double x = double(v[(n/2)-1]+v[n/2])/2;
// 		        return x;
// 		    }
// 		}
    
    double MedianOfArrays(vector<int>& array1, vector<int>& array2){
        
        
        vector<int> s;
        for(int i=0;i<array1.size();i++)
        s.push_back(array1[i]);
        
        for(int i=0;i<array2.size();i++)
        s.push_back(array2[i]);
        
        sort(s.begin(),s.end());
        int len = s.size();
        int mid = len/2;
        
        if(len%2 != 0)
        {
            double res = s[mid];
            return res;
        }
        else
        {
            double res = s[mid]+s[mid-1];
            return res/2;
        }
        
    }


};

//{ Driver Code Starts.

int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        int m,n;
        cin>>m;
        vector<int> array1(m);
        for (int i = 0; i < m; ++i){
            cin>>array1[i];
        }
        cin>>n;
        vector<int> array2(n);
        for (int i = 0; i < n; ++i){
            cin>>array2[i];
        }
        Solution ob;
        cout<<ob.MedianOfArrays(array1, array2)<<endl;
    }
    return 0; 
}



// } Driver Code Ends
