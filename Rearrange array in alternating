/*
Given an unsorted array Arr of N positive and negative numbers. Your task is to create an array of alternate positive and negative numbers
without changing the relative order of positive and negative numbers.
Note: Array should start with a positive number.
 

Example 1:

Input: 
N = 9
Arr[] = {9, 4, -2, -1, 5, 0, -5, -3, 2}
Output:
9 -2 4 -1 5 -5 0 -3 2
Explanation : Positive elements : 9,4,5,0,2
Negative elements : -2,-1,-5,-3
As we need to maintain the relative order of
postive elements and negative elements we will pick
each element from the positive and negative and will
store them. If any of the positive and negative numbers
are completed. we will continue with the remaining signed
elements.The output is 9,-2,4,-1,5,-5,0,-3,2.

Example 2:

Input:
N = 10
Arr[] = {-5, -2, 5, 2, 4, 7, 1, 8, 0, -8}
Output:
5 -5 2 -2 4 -8 7 1 8 0
Explanation : Positive elements : 5,2,4,7,1,8,0
Negative elements : -5,-2,-8
As we need to maintain the relative order of
postive elements and negative elements we will pick
each element from the positive and negative and will
store them. If any of the positive and negative numbers
are completed. we will continue with the remaining signed
elements.The output is 5,-5,2,-2,4,-8,7,1,8,0.

*/


/*

SOLUTION APPROACH :

Push all the positive integers into a array named p 
Push all negative integers into array names neg

Alternatively push the elements from positive array and negative array into the given array or final array
based on index values 
if Index %2 == 0
push positive integer
if index %2 !=0 
push negative integer
until all the elements are pushed into the final array 

*/


//{ Driver Code Starts
#include <bits/stdc++.h>

using namespace std;

// } Driver Code Ends
//User function template for C++
class Solution{
public:

	void rearrange(int arr[], int n) {
	    // code here
	    vector<int> p;
	    vector<int> neg;

	    for(int i=0;i<n;i++)
	    {
	        if(arr[i] >= 0)
	        p.push_back(arr[i]);
	        else
	        neg.push_back(arr[i]);
	    }
	    int j=0;
	    int k=0;
	    int i=0;
	    for(i=0;(j<p.size() && k<neg.size());i++)
	    {
	        if(i%2 == 0)
	        arr[i] = p[j++];
	        else
	        arr[i] = neg[k++];
	    }
	    
	    while(j<p.size())
	    {
	        arr[i++] = p[j++];
	    }
	    
	    while(k<neg.size())
	    {
	        arr[i++] = neg[k++];
	    }
	}
};

//{ Driver Code Starts.

int main() {
    int t;
    cin >> t;
    while (t--) {
        int n, i;
        cin >> n;
        int arr[n];
        for (i = 0; i < n; i++) {
            cin >> arr[i];
        }
        Solution ob;
        ob.rearrange(arr, n);
        for (i = 0; i < n; i++) {
            cout << arr[i] << " ";
        }
        cout << "\n";
    }
    return 0;
}

// } Driver Code Ends
