/*

Given an array nums[] of size n, construct a Product Array P (of same size n) such that P[i] is equal to the product of all
the elements of nums except nums[i].

 

Example 1:

Input:
n = 5
nums[] = {10, 3, 5, 6, 2}
Output:
180 600 360 300 900
Explanation: 
For i=0, P[i] = 3*5*6*2 = 180.
For i=1, P[i] = 10*5*6*2 = 600.
For i=2, P[i] = 10*3*6*2 = 360.
For i=3, P[i] = 10*3*5*2 = 300.
For i=4, P[i] = 10*3*5*6 = 900.
Example 2:

Input:
n = 2
nums[] = {12,0}
Output:
0 12

*/

//{ Driver Code Starts
//Initial template for C++

#include<bits/stdc++.h>
using namespace std;



// } Driver Code Ends
//User function template for C++

class Solution{
  public:
    // nums: given vector
    // return the Product vector P that hold product except self at each index
    vector<long long int> productExceptSelf(vector<long long int>& nums, int n) {
       
       vector<long long int> ans;

        long long int product=1;
        if(n<1)

        {

            return ans;

        }

        for(int i=0;i<n;i++)

        {

            product*=nums[i];

            ans.push_back(product);

        }

        product=1;

        for(int i=n-1;i>0;i--)

        {

            ans[i]=ans[i-1]*product;

            product*=nums[i];

        }

        ans[0]=product;

        return ans;
       
       
       
       
       
       
       
       
        // int i,j,p=1;
        // vector<long long int>  res;
        // for(i=0;i<n;i++)
        // {
        //     p=1;
        //     for(j=0;j<n;j++)
        //     {
        //         if(i == j)
        //         continue;
        //         else
        //         p=p*nums[j];
        //     }
        //     res.push_back(p);
        // }
        // return res;
    }
};


//{ Driver Code Starts.
int main()
 {
    int t;  // number of test cases
    cin>>t;
    while(t--)
    {
        int n;  // size of the array
        cin>>n;
        vector<long long int> arr(n),vec(n);
        
        for(int i=0;i<n;i++)    // input the array
        {
            cin>>arr[i];
        }
        Solution obj;
        vec = obj.productExceptSelf(arr,n);   // function call
        
        for(int i=0;i<n;i++)    // print the output
        {
            cout << vec[i] << " ";
        }
        cout<<endl;
    }
	return 0;
}
// } Driver Code Ends
