void merge(vector<int>& arr,int s,int mid,int e)
{
    int i,j,k,len1,len2;
    len1 = mid-s+1;
    len2 = e-mid;
    int arr1[len1];
    int arr2[len2];
    for(i=0;i<len1;i++)
    {
        arr1[i] = arr[s+i];
    }
    // k=mid+1;
    for(i=0;i<len2;i++)
    {
        arr2[i] = arr[mid+i+1];
    }

    i=0;
    j=0;
    k=s;
    while(i<len1 && j<len2)
    {
        if(arr1[i]<=arr2[j])
        {
            arr[k] = arr1[i];
            i++;
        }
        else {
            arr[k] = arr2[j++];
        }
        k++;
    }

    while(i<len1)
    {
        arr[k++] = arr1[i++];
    }

    while(j<len2)
    {
        arr[k++] = arr2[j++];
    }

}



void sort(vector<int>& arr,int s ,int e)
{
    int mid;
    if(s>=e)
    return;

    mid =s+ (e-s)/2;
    
    sort(arr,s,mid);
    sort(arr,mid+1,e);

    merge(arr,s,mid,e);    

}

void mergeSort(vector < int > & arr, int n) {
    // Write your code here.

    sort(arr,0,n-1);



}








