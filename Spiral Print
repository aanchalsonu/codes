/*
Given an m x n matrix, return all elements of the matrix in spiral order.*/
class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& matrix) {
        vector<int> ans;
        int startrow,startcol,endrow,endcol;
        int m = matrix.size();
        int n= matrix[0].size();
        int total=(m*n),count=0;
        startrow=0;
        startcol=0;
        endrow=matrix.size()-1;
        endcol=n-1;
        while(count<total)
        {
            //starting row
            for(int i=startcol;i<=endcol && count<total;i++)
            {
                ans.push_back(matrix[startrow][i]);
                count++;
            }
            startrow++;

            //ending column
            for(int i=startrow;i<=endrow && count<total;i++)
            {
                ans.push_back(matrix[i][endcol]);
                count++;
            }
            endcol--;
            
            //endingrow
            for(int i=endcol;i>=startcol && count<total;i--)
            {
                ans.push_back(matrix[endrow][i]);
                count++;
            }
            endrow--;

            //starting column
            for(int i=endrow;i>=startrow && count<total;i--)
            {
                ans.push_back(matrix[i][startcol]);
                count++;
            }
            startcol++;
        }
        return ans;
    }
};
