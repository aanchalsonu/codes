/*

The task is to find the smallest number with given sum of digits as S and number of digits as D.

 

Example 1:

Input:
S = 9 
D = 2
Output:
18
Explanation:
18 is the smallest number
possible with sum = 9
and total digits = 2.
 

Example 2:

Input:
S = 20
D = 3
Output:
299
Explanation:
299 is the smallest number
possible with sum = 20
and total digits = 3.

*/

//{ Driver Code Starts
#include<bits/stdc++.h> 
using namespace std; 

// } Driver Code Ends
class Solution{   
public:
    string smallestNumber(int s, int d){
        // code here 
        
        string res = "";
        
        if(d*9 < s)
        return "-1";
        
        for(int i=1;i<d;i++)
        {
            if(s > 9) // agar number bada hai tho sidha 9 add kardo aur agar single digit hai tho sabse chota wala number add hoga
            {
                res += "9";
                s = s-9;
            }
            else
            {
                res += to_string(s-1);
                s = 1;
            }
        }
        
        res += to_string(s);
        reverse(res.begin(),res.end());
        return res;
        
        // int temp = s%d;
        // res = res + to_string(s-temp);
        // if(temp <= 9)
        // res += to_string(temp);
        // else
        // {
        //     while(temp > 9)
        //     {
        //         if(temp%d == 0)
        //         {
        //             res = res + to_string(temp/2);
        //             res += to_string(temp/2);
        //         }
                
        //     }
        // }
        // return res;
        
    }
};

//{ Driver Code Starts.
int main() 
{ 
    int t;
    cin>>t;
    while(t--)
    {
        int S,D;
        cin >> S >> D;
        Solution ob;
        cout << ob.smallestNumber(S,D) << endl;
    }
    return 0; 
} 
// } Driver Code Ends
