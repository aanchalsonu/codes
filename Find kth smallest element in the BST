/*
Find the kth smallest element in the BST
can also solve by first considering INorder traversal and returning the kth element since it will be sorted
*/

#include <bits/stdc++.h> 
/*************************************************************
 
    Following is the Binary Tree node structure

    class BinaryTreeNode 
    {
    public : 
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }
    };

*************************************************************/

int solve(BinaryTreeNode<int>* root,int &i, int k)
{
    //base case

    if(root == NULL)
    return -1;// dont know the answer so return null

    //traverse in inorder manner
    //left
    int left = solve(root->left,i,k);

    if(left != -1)
    {
        return left;
    }

    //N part
    i++;
    if(i==k)
    {
        return root->data;
    }

    //right part
    return solve(root->right,i,k);
    


}

int kthSmallest(BinaryTreeNode<int>* root, int k) {
    int i=0;
    int ans = solve(root,i,k);
    return ans;
}
