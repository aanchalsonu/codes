/*
We already know Basic Euclidean Algorithm. Now using the Extended Euclidean Algorithm, given a and b calculate the GCD and integer coefficients x, y.
Using the same. x and y must satisfy the equation ax + by = gcd(a, b) .
 

Example 1:

Input:
a = 35
b = 15
Output:
5 1 -2
Explanation:
gcd(a,b) = 5
35*1 + 15*(-2) = 5
Example 2:

Input:
a = 30
b = 20
Output:
10 1 -1
Explanation:
gcd(30,20) = 10
30*(1) + 20*(-1) = 10

*/

//{ Driver Code Starts



#include<bits/stdc++.h> 
using namespace std;

// } Driver Code Ends


class Solution{
public:
    vector<int> gcd(int a, int b){
        vector<int> v;
        if(a==0){
            v.push_back(b);
            v.push_back(0);
            v.push_back(1);
            return v;
        }
        vector<int> r = gcd(b%a,a);
        v.push_back(r[0]);
        v.push_back(r[2]-(b/a)*r[1]);
        v.push_back(r[1]);
        return v;
    }
};

//{ Driver Code Starts.
int main() 
{ 
    int t;
    cin>>t;
    while(t--)
    {
        int a,b;
        cin>>a>>b;
        Solution ob;
        vector<int> v = ob.gcd(a,b);
        if(v.size()!=3)
            return 0;
        cout<<v[0]<<" "<<v[1]<<" "<<v[2]<<"\n";
    }
    return 0; 
}
// } Driver Code Ends
