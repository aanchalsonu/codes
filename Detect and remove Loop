/*************************************************
    
    class Node {
        public :

        int data;
        Node *next;

        Node(int data) {
            this -> data = data;
            this -> next = NULL;
        }
    };

*************************************************/

Node * LoopDetect(Node* head)
{
    if(head == NULL)
    return NULL;

    Node * slow= head;
    Node * fast= head;
    while(slow != NULL && fast != NULL)
    {
        fast = fast->next;
        if(fast != NULL)
        fast = fast->next;
        slow = slow->next;
        //if slow equals fast then the loop is there
        if(slow == fast)
        break;
    }
    if(slow == NULL)
    return NULL;
    
    if(slow == fast)
    {
        slow = head;
        while(slow != fast)
        {
            slow = slow->next;
            fast = fast->next;
        }
        return slow;
    }
    return NULL;

}


Node *removeLoop(Node *head)
{
    // Write your code here.
    if(head == NULL)
    return NULL;
    
    Node * temp;
    temp = LoopDetect(head);

    if(temp == NULL)
    return head;

    Node * s= temp;
    while(s->next != temp)
    {
        s = s->next;
    }
    s->next  =NULL;
    return head;
}

