#include <bits/stdc++.h> 
/*
    Following is the class structure of BinaryTreeNode class for referance:

    class BinaryTreeNode {
       public : 
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }

        ~BinaryTreeNode() {
            if (left){
                delete left;
            }
            if (right){
                delete right;
            }
        }
    };
*/

BinaryTreeNode<int>* solve(vector<int>& preorder , int mini,int maxi,int &i)
{
    //base condition
    if(i >= preorder.size())
    return NULL;


    if(preorder[i] < mini || preorder[i] > maxi)
    return NULL;

    BinaryTreeNode<int>* temp = new BinaryTreeNode<int>(preorder[i++]);
    temp->left = solve(preorder,mini,temp->data,i);
    temp->right = solve(preorder,temp->data,maxi,i);
    return temp;

}



BinaryTreeNode<int>* preorderToBST(vector<int> &preorder) {
    int mini = INT_MIN;
    int maxi = INT_MAX;
    int i=0;
    BinaryTreeNode<int>* root = solve(preorder,mini,maxi,i);
    return root;
}
