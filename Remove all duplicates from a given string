/*

Given a string Str which may contains lowercase and uppercase chracters. The task is to remove all duplicate 
characters from the string and find the resultant string. The order of remaining characters in the output should be same as in the original string.

Example 1:

Input:
Str = geeksforgeeks
Output: geksfor
Explanation: After removing duplicate
characters such as e, k, g, s, we have
string as "geksfor".
Example 2:

Input:
Str = HappyNewYear
Output: HapyNewYr
Explanation: After removing duplicate
characters such as p, e, a, we have
string as "HapyNewYr".

*/

//{ Driver Code Starts
#include <bits/stdc++.h>

using namespace std;


// } Driver Code Ends
//User function template for C++
class Solution{
public:
	string removeDuplicates(string str) {
	    unordered_map<char,int> mp;
	    for(int i=0;i<str.length();i++)
	    {
	        mp[str[i]]++;
	    }
	    
	    string res="";
	    
	    for(int i=0;i<str.length();i++)
	    {
	        if(mp[str[i]]==0)
	        {
	            continue;
	        }
	        else
	        {
	            res = res + str[i];
	            mp[str[i]]=0;
	        }
	    }
	    return res;
	}
};

//{ Driver Code Starts.

int main() {
    int t;
    cin >> t;
    while (t--) {
        string str;
        cin >> str;
        Solution ob;
        auto ans = ob.removeDuplicates(str);

        cout << ans << "\n";
    }
    return 0;
}
// } Driver Code Ends
