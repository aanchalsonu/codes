/*
Given a string S, find the longest palindromic substring in S. Substring of string S: S[ i . . . . j ]
where 0 ≤ i ≤ j < len(S). Palindrome string: A string which reads the same backwards. More formally, S is palindrome if reverse(S) = S. Incase of conflict,
return the substring which occurs first ( with the least starting index).


Example 1:

Input:
S = "aaaabbaa"
Output: aabbaa
Explanation: The longest Palindromic
substring is "aabbaa".
Example 2:

Input: 
S = "abc"
Output: a
Explanation: "a", "b" and "c" are the 
longest palindromes with same length.
The result is the one with the least
starting index.

Your Task:
You don't need to read input or print anything. Your task is to complete the function longestPalin() which takes the string S as input and 
returns the longest palindromic substring of S.

*/

//{ Driver Code Starts
#include<bits/stdc++.h>
using namespace std;


// } Driver Code Ends
class Solution {
  public:
  
  string printString(string s , int start, int end)
  {
      string t ="";
      for(int i=start;i<=end;i++)
      {
          t =  t + s[i];
      }
      return t;
  }
  
    string longestPalin (string S) {
        // code here
        
        int l,h;
        int start=0,end=1;
        
        for(int i=1;i<S.length();i++)
        {
            
            // For strings with even length
            l = i-1;
            h = i;
            
            while(l>=0 && h<=S.length() && S[l] == S[h])
            {
                if(h-l+1>end)
                {
                    start = l;
                    end = h-l+1;
                }
                l--;
                h++;
            }
            
            //Odd length
            
            l = i-1;
            h = i+1;
            
            while(l>=0 && h<=S.length() && S[l] == S[h])
            {
                if(h-l+1>end)
                {
                    start = l;
                    end = h-l+1;
                }
                l--;
                h++;
            }
            
        }
        string res = printString(S,start,start+end-1);
        return res;
    }
};

//{ Driver Code Starts.

int main()
{
    int t; cin >> t;
    while (t--)
    {
        string S; cin >> S;
        
        Solution ob;
        cout << ob.longestPalin (S) << endl;
    }
}
// Contributed By: Pranay Bansal

// } Driver Code Ends
