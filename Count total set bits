/*

You are given a number N. Find the total count of set bits for all numbers from 1 to N(both inclusive).

Example 1:

Input: N = 4
Output: 5
Explanation:
For numbers from 1 to 4.
For 1: 0 0 1 = 1 set bits
For 2: 0 1 0 = 1 set bits
For 3: 0 1 1 = 2 set bits
For 4: 1 0 0 = 1 set bits
Therefore, the total set bits is 5.
Example 2:

Input: N = 17
Output: 35
Explanation: From numbers 1 to 17(both inclusive), 
the total number of set bits is 35.

Your Task: The task is to complete the function countSetBits() that takes n as a parameter and returns the count of all bits.


*/

//{ Driver Code Starts
//Initial Template for C++

#include<bits/stdc++.h>
using namespace std;


// } Driver Code Ends
//User function Template for C++

class Solution{
    public:
    int countpower(int n)

   { int x=0;

     while((pow(2,x))<=n){

         x++; }

     return x-1; }
    // n: input to count the number of set bits
    //Function to return sum of count of set bits in the integers from 1 to n.
    int countSetBits(int n)
    {
        // Your logic here
        
        if(n==0){

        return 0;}

        int x=countpower(n);

      int x1=x*(pow(2,x-1));//x*(1<<(x-1)); 

      int x2=(n-pow(2,x)+1);//n-(1<<x)+1;

      int rest=n-pow(2,x);//n-(1<<x);

      int ans=x1+x2+countSetBits(rest);

 

      return ans;
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        // int res=0;
        // for(int i=1;i<=n;i++)
        // {
        //     int x = i;
        //     while(x)
        //     {
        //         res += (x & 1);
        //         x = x>>1;
        //     }
        // }
        // return res;
    }
};


//{ Driver Code Starts.

// Driver code
int main()
{
	 int t;
	 cin>>t;// input testcases
	 while(t--) //while testcases exist
	 {
	       int n;
	       cin>>n; //input n
	       Solution ob;
	       cout << ob.countSetBits(n) << endl;// print the answer
	  }
	  return 0;
}

// } Driver Code Ends
