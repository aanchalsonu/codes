/*
Given an array of integers heights representing the histogram's bar height where the width of each bar is 1, return the area of the largest rectangle 
in the histogram.
*/

class Solution {
public:


    vector<int> nextSmaller(vector<int> &arr, int n)
{
    // Write your code here.

    vector<int> ans(n);
    stack<int> s;
    s.push(-1);

    int i;
    
    for(i=n-1;i>=0;i--)
    {
        int curr = arr[i];
        while(s.top() != -1 &&  arr[s.top()] >= curr)
        {
            s.pop();
        }
        ans[i] = s.top();

        s.push(i);
    }
    return ans;
}


     vector<int> prevSmaller(vector<int> &arr, int n)
{
    // Write your code here.

    vector<int> ans(n);
    stack<int> s;
    s.push(-1);

    int i;
    
    for(i=0;i<n;i++)
    {
        int curr = arr[i];
        while(s.top() != -1 &&  arr[s.top()] >= curr)
        {
            s.pop();
        }
        ans[i] = s.top();

        s.push(i);
    }
    return ans;
}


    int largestRectangleArea(vector<int>& heights) {
        int area,newarea,i,j;

        int n = heights.size();

        vector<int> next(n);
        next = nextSmaller(heights,n);

        vector<int> prev;
        prev = prevSmaller(heights,n);

        area = 0;

        for(i=0;i<n;i++)
        {
            int l = heights[i];
            if(next[i] == -1)
            {
                next[i] = n;
            }
            int b = next[i]-prev[i]-1;
            newarea = l*b;
            area = max(area,newarea); 
        }

        return area;
    }
};
