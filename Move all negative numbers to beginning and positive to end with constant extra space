/*
Given an unsorted array arr[] of size N having both negative and positive integers. The task is place all negative element at the 
end of array without changing the order of positive element and negative element.

 

Example 1:

Input : 
N = 8
arr[] = {1, -1, 3, 2, -7, -5, 11, 6 }
Output : 
1  3  2  11  6  -1  -7  -5

Example 2:

Input : 
N=8
arr[] = {-5, 7, -3, -4, 9, 10, -1, 11}
Output :
7  9  10  11  -5  -3  -4  -1

*/

//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;

// } Driver Code Ends
class Solution{
    public:
    void segregateElements(int arr[],int n)
    {
        // Your code goes here
        
        vector<int> p;
        vector<int> neg;
        for(int i=0;i<n;i++)
        {
            if(arr[i]>0)
            p.push_back(arr[i]);
            else
            neg.push_back(arr[i]);
        }
        int k=0;
        for(int i=0;i<p.size();i++)
        {
            arr[k++]  = p[i];
        }
        
        for(int i=0;i<neg.size();i++)
        {
            arr[k++] = neg[i];
        }
    }
};

//{ Driver Code Starts.
int main() {
	// your code goes here
	int t;
	cin>>t;
	while(t--)
	{
		int n;
		cin>>n;
		int a[n];
		for(int i=0;i<n;i++)
		cin>>a[i];
		Solution ob;
		ob.segregateElements(a,n);
		
        for(int i=0;i<n;i++)
        cout<<a[i]<<" ";
		cout<<endl;
	}
}

// } Driver Code Ends
