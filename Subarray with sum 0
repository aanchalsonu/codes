/*
Given an array of positive and negative numbers. Find if there is a subarray (of size at-least one) with 0 sum.

Example 1:

Input:
5
4 2 -3 1 6

Output: 
Yes

Explanation: 
2, -3, 1 is the subarray 
with sum 0.
Example 2:

Input:
5
4 2 0 1 6

Output: 
Yes

Explanation: 
0 is one of the element 
in the array so there exist a 
subarray with sum 0.
*/


/*
SOLUTION APPROACH:

The sum of elements is zero only if atleast a single element is repeated twice while adding all the elements 
use map to know the count of elemenst sum 
if the count of any of the element exceeds one return true else return false


*/

//{ Driver Code Starts
// A C++ program to find if there is a zero sum
// subarray
#include <bits/stdc++.h>
using namespace std;



// } Driver Code Ends
class Solution{
    public:
    //Complete this function
    //Function to check whether there is a subarray present with 0-sum or not.
    bool subArrayExists(int arr[], int n)
    {
        
        int sum=0;
        map<int,int> mp;
        mp[0]++;
        for(int i=0;i<n;i++)
        {
            sum += arr[i];
            mp[sum]++;
        }
        
        
        for(auto x:mp)
        {
            if(x.second >1)
            return true;
        }
        return false;
        
        
        
        
        // int i=1;
        // int j=n-1;
        
        // // sort(arr,arr+n);
        // int sum= arr[0];
        // while(i<=j)
        // {
        //     sum = sum + arr[i];
        //     if(sum == 0)
        //     return true;
            
        //     if(sum<0)
        //     {
        //         i++;
        //     }
        //     else
        //     {
        //         sum = sum - arr[i];
        //         i++;
        //     }
        // }
        return false;
    }
};

//{ Driver Code Starts.
// Driver code
int main()
{
	int t;
	cin>>t;
	while(t--)
	{
	    int n;
	    cin>>n;
	    int arr[n];
	    for(int i=0;i<n;i++)
	    cin>>arr[i];
	    Solution obj;
	    	if (obj.subArrayExists(arr, n))
		cout << "Yes\n";
	else
		cout << "No\n";
	}
	return 0;
}
// } Driver Code Ends
