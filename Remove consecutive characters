/*

Given a string S. For each index i(1<=i<=N-1), erase it if s[i] is equal to s[i-1] in the string.

Example 1:

Input:
S = aabb
Output:  ab 
Explanation: 'a' at 2nd position is
appearing 2nd time consecutively.
Similiar explanation for b at
4th position.

Example 2:

Input:
S = aabaa
Output:  aba
Explanation: 'a' at 2nd position is
appearing 2nd time consecutively.
'a' at fifth position is appearing
2nd time consecutively.


*/

//{ Driver Code Starts
#include <bits/stdc++.h> 
using namespace std; 


// } Driver Code Ends
class Solution{
    public:
    string removeConsecutiveCharacter(string S)
    {
        string res;
        
        for(int i=0;i<S.length();i++)
        {
            if(S[i] == S[i-1])
            continue;
            else
            {
                res.push_back(S[i]);
            }
        }
        
        
        return res;
        
        
        // set<char> s;
        // for(int i=0;i<S.length();i++)
        // {
        //     s.insert(S[i]);
        // }
        
        // for(auto i : s)
        // {
        //     res.push_back(i);
        // }
        // return res;
    }
};

//{ Driver Code Starts.
int main() 
{ 
    int t;
    cin>>t;
    while(t--)
    {
        string s;
        cin>>s;
        Solution ob;
        cout<<ob.removeConsecutiveCharacter(s)<<endl;
    }
} 




// } Driver Code Ends
