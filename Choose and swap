/*

You are given a string s of lower case english alphabets. You can choose any two characters in the string and replace all the occurences 
of the first character with the second character and replace all the occurences of the second character with the first character. Your aim
is to find the lexicographically smallest string that can be obtained by doing this operation at most once.

Example 1:

Input:
A = "ccad"
Output: "aacd"
Explanation:
In ccad, we choose a and c and after 
doing the replacement operation once we get, 
aacd and this is the lexicographically
smallest string possible. 
 

Example 2:

Input:
A = "abba"
Output: "abba"
Explanation:
In abba, we can get baab after doing the 
replacement operation once for a and b 
but that is not lexicographically smaller 
than abba. So, the answer is abba. 


*/

//{ Driver Code Starts
#include<bits/stdc++.h>
using namespace std;


// } Driver Code Ends
class Solution{
public:
    string chooseandswap(string s){
        // Code Here
        
        int f[26];
        for(int i=0;i<26;i++)
        {
            f[i]=-1;
        }
        
        for(int i=0;i<s.length();i++)
        {
            if(f[s[i]-'a'] == -1)
            f[s[i]-'a']=i;
        }
        int i,j;
        bool exist = 0;
        
        for(i=0;i<s.length();i++)
        {
            for(j=0;j<s[i]-'a';j++)
            {
                if(f[j] > f[s[i]-'a'])
                {
                    exist = true;
                    break;
                }
            }
            if(exist)
            break;
        }
        
        if(i < s.length()-1)
        {
            char c1 = s[i];
            char c2 = char(j+'a');
            
            for(i=0;i<s.length();i++)
            {
                if(s[i] == c1)
                s[i] = c2;
                else if(s[i] == c2)
                s[i] =c1;
            }
            
        }
        return s;
        
        
        
        
        
    }
    
};


//{ Driver Code Starts.

int main()
{
    Solution obj;
	int t;
	cin >> t;
	while(t--)
	{	
	    string a;
		cin >> a;
		cout << obj.chooseandswap(a) << endl;
	}
	return 0;
}

// } Driver Code Ends
