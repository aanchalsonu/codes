/*

Given an array of integers (A[])  and a number x, find the smallest subarray with sum greater 
than the given value. If such a subarray do not exist return 0 in that case.

Note: The answer always exists. It is guaranteed that x doesn't exceed the summation of a[i] (from 1 to N).

Example 1:

Input:
A[] = {1, 4, 45, 6, 0, 19}
x  =  51
Output: 3
Explanation:
Minimum length subarray is 
{4, 45, 6}

Example 2:
Input:
A[] = {1, 10, 5, 2, 7}
   x  = 9
Output: 1
Explanation:
Minimum length subarray is {10}
 

Your Task:  
You don't need to read input or print anything. Your task is to complete the function smallestSubWithSum() which takes the
array A[], its size N and an integer X as inputs and returns the required ouput.
*/


//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
class Solution{
  public:

    int smallestSubWithSum(int arr[], int n, int x)
    {
        // sort(arr,arr+n);
        
        int i=0;
        int j=0;
        int sum = arr[0];
        int mini = INT_MAX;
        
        while(j<n)
        {
            if(sum > x)
            {
                mini = min( mini ,j-i+1);
                sum = sum - arr[i];
                i++;
            }
            else
            {
                j++;
                sum += arr[j];
                
            }
        }
        return mini;
        // while(i<=j)
        // {
        //     sum = sum + arr[i];
            
        //     if(sum < x)
        //     {
        //         ans.push_back(arr[i]);
        //         i++;
        //     }
        //     else if(sum > x)
        //     {
        //         sum = sum - ans[0];
        //         ans.erase(ans.begin());
        //     }
        // }
    }
};

//{ Driver Code Starts.

int main() {
	// your code goes here
	int t;
	cin>>t;
	while(t--)
	{
		int n,x;
		cin>>n>>x;
		int a[n];
		for(int i=0;i<n;i++)
		cin>>a[i];
		Solution obj;
		cout<<obj.smallestSubWithSum(a,n,x)<<endl;
	}
	return 0;
}
// } Driver Code Ends
