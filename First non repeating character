/*
Given an input stream of A of n characters consisting only of lower case alphabets. The task is to find the first non repeating character,
each time a character is inserted to the stream. If there is no such character then append '#' to the answer.
 

Example 1:

Input: A = "aabc"
Output: "a#bb"
Explanation: For every character first non
repeating character is as follow-
"a" - first non-repeating character is 'a'
"aa" - no non-repeating character so '#'
"aab" - first non-repeating character is 'b'
"aabc" - first non-repeating character is 'b'
*/

//{ Driver Code Starts
#include<bits/stdc++.h>
using namespace std;

// } Driver Code Ends
class Solution {
	public:
		string FirstNonRepeating(string A){
		    queue<int> q;
		    string ans="";
		    unordered_map<char,int> count;
		    int i;
		    
		    for(i=0;i<A.length();i++)
		    {
		        char ch = A[i];
		        //increase the count
		        count[ch]++;
		        
		        //push the character into the queue
		        q.push(ch);
		        
		        while(!q.empty())
		        {
		            if(count[q.front()] > 1)
		            {
		                //repeatinf charcater
		                q.pop();
		            }
		            else
		            {
		                //non repeatinf charcater
		                ans.push_back(q.front());
		                break;
		            }
		        }
		        
		        //if queue is empty means there is no such character
		        if(q.empty())
		        {
		            ans.push_back('#');
		        }
		        
		    }
		    return ans;
		    
		}

};

//{ Driver Code Starts.
int main(){
	int tc;
	cin >> tc;
	while(tc--){
		string A;
		cin >> A;
		Solution obj;
		string ans = obj.FirstNonRepeating(A);
		cout << ans << "\n";
	}
	return 0;
}
// } Driver Code Ends
