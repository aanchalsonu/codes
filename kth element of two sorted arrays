/*

Given two sorted arrays arr1 and arr2 of size N and M respectively and an element K. The task is to find the element that would be at the kâ€™th 
position of the final sorted array.
 

Example 1:

Input:
arr1[] = {2, 3, 6, 7, 9}
arr2[] = {1, 4, 8, 10}
k = 5
Output:
6
Explanation:
The final sorted array would be -
1, 2, 3, 4, 6, 7, 8, 9, 10
The 5th element of this array is 6.
Example 2:
Input:
arr1[] = {100, 112, 256, 349, 770}
arr2[] = {72, 86, 113, 119, 265, 445, 892}
k = 7
Output:
256
Explanation:
Final sorted array is - 72, 86, 100, 112,
113, 119, 256, 265, 349, 445, 770, 892
7th element of this array is 256.

*/

//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
class Solution{
    public:
    int kthElement(int arr1[], int arr2[], int n, int m, int k)
    {
        
        vector<int> ans;
        for(int i=0;i<n;i++)
        ans.push_back(arr1[i]);
        
        for(int i=0;i<m;i++)
        ans.push_back(arr2[i]);
        
        sort(ans.begin(),ans.end());
        return ans[k-1];
        
        // int i,j;
        // sort(arr1,arr1+n);
        // sort(arr2,arr2+m);
        
        // vector<int> v;
        // i=0;
        // j=0;
        // while(i<n && j<m)
        // {
        //     if(arr1[i] == arr2[j] )
        //     {
        //         v.push_back(arr1[i]);
        //         i++;
        //         j++;
        //     }
        //     else if(arr1[i]<arr2[j])
        //     {
        //         v.push_back(arr1[i]);
        //         i++;
        //     }
        //     else if(arr2[j] < arr1[i])
        //     {
        //         v.push_back(arr2[j]);
        //         j++;
        //     }
        // }
        // while(i<n)
        // {
        //     v.push_back(arr1[i]);
        //     i++;
        // }
        
        // while(j<m)
        // {
        //     v.push_back(arr2[j]);
        //     j++;
        // }
        
        // return v[k-1];
    }
};

//{ Driver Code Starts.
 
// Driver code
int main()
{
	int t;
	cin>>t;
	while(t--){
		int n,m,k;
		cin>>n>>m>>k;
		int arr1[n],arr2[m];
		for(int i=0;i<n;i++)
			cin>>arr1[i];
		for(int i=0;i<m;i++)
			cin>>arr2[i];
		
		Solution ob;
        cout << ob.kthElement(arr1, arr2, n, m, k)<<endl;
	}
    return 0;
}
// } Driver Code Ends
