/*

Given an integer N, find its factorial. return a list of integers denoting the digits that make up the factorial of N.

Example 1:

Input: N = 5
Output: 120
Explanation : 5! = 1*2*3*4*5 = 120
Example 2:

Input: N = 10
Output: 3628800
Explanation :
10! = 1*2*3*4*5*6*7*8*9*10 = 3628800

*/

/*
SOLUTION APPROACH:

Maintain a single array with initial value as 1
and then perform val = arr[i]*x+carry
until size of the whole array 
where x is the outer loop value from 1 to n

now use while loop to find the each digit and push it into the final arrray 

reverse the final array 

*/

//{ Driver Code Starts
// Initial Template for C++
#include <bits/stdc++.h>
using namespace std;

// } Driver Code Ends
//User function template for C++

class Solution {
public:

    // long long int fact(int n,vector<int> & dp)
    // {
    //     //base cases
    //     if(n == 0 || n == 1)
    //     return 1;
        
    //     if(dp[n] != -1)
    //     return dp[n];
        
    //     return dp[n] = n*fact(n-1,dp);
    // }
    

    vector<int> factorial(int N){
    
    
    vector<int > ans; 
       ans.push_back(1); 
       for(int x=2; x<=N; x++){
           int carry=0; 
           for(int i=0; i<ans.size(); i++){
               int val=ans[i]*x +carry; 
               ans[i]=val%10; 
               carry=val/10; 
           }
           while(carry!=0){
               ans.push_back(carry%10); 
               carry/=10; 
           }
       }
       reverse(ans.begin() , ans.end()); 
       return ans;
    
   
    
        // code here
        // vector<int> dp(N+1,-1);
        // vector<int> final;
        // long long int ans =  fact(N,dp);
        
        // final.push_back(1);
        // for(int i=2;i<=N;i++)
        // {
        //     int carry=0;
        //     for(int j=0;i<final.size();j++)
        //     {
        //         int val = final[j]*i+carry;
        //         final[j] = val%10;
        //         carry = val/10;
        //     }
            
        //     while(carry != 0)
        //     {
        //         final.push_back(carry%10);
        //         carry /= 10;
        //     }
        // }
        // reverse(final.begin(),final.end());
        // return final;
        
        
        
        // stack<long long int> r;
        // while(ans > 0)
        // {
        //     int temp = ans % 10;
        //     r.push(temp);
        //     ans = ans/10;
        // }
        // int size=r.size();
        // for(int i=0;i<size;i++)
        // {
        //     int x = r.top();
        //     final.push_back(x);
        //     r.pop();
        // }
        
    }
};

//{ Driver Code Starts.

int main() {
    int t;
    cin >> t;
    while (t--) {
        int N;
        cin >> N;
        Solution ob;
        vector<int> result = ob.factorial(N);
        for (int i = 0; i < result.size(); ++i){
            cout<< result[i];
        }
        cout << endl;
    }
    return 0;
}
// } Driver Code Ends
