/*

Given a binary string, that is it contains only 0s and 1s. We need to make this string a sequence of alternate characters by flipping some of the bits, 
our goal is to minimize the number of bits to be flipped.

Example 1:

Input:
S = "001"
Output: 1
Explanation: 
We can flip the 0th bit to 1 to have
101.


Example 2:

Input:
S = "0001010111" 
Output: 2
Explanation: We can flip the 1st and 8th bit 
bit to have "0101010101"
101.

*/

//{ Driver Code Starts
#include<bits/stdc++.h>
using namespace std;

int minFlips (string s);
int32_t main()
{
    int t; cin >> t;
    while (t--)
    {
        string s; cin >> s;

        cout << minFlips (s) << endl;
    }
}
// Contributed By: Pranay Bansal

// } Driver Code Ends


int minFlips (string S)
{
    int flips=0;
    //chekc for 1 at evem places and 0 at odd places 
    for(int i=0;i<S.length();i++)
    {
        if(i%2== 0)
        {
            if(S[i] == '1')
            flips++;
        }
        else
        {
            if(S[i] == '0')
            flips++;
        }
    }
    
    int temp = S.size()-flips;
    return min(flips,temp);
    
    
    
    
    
    
    
    
    // int i,j,r=0;
    // int count=0;
    
    // for(i=0;i<S.length();)
    // {
    //     count=0;
    //     char ch = S[i];
    //     while(S[i] == ch)
    //     {
    //         i++;
    //         count++;
    //     }
    //     r = r + count/2;
    // }
    
    // return r;
}
