
/* Find the maximum sum such that no two adjacent elements are used 
we have two possible cases where we can either include or exclude th element
so recursive cases are posiible 
one with i-2 where the elements from 1st are included 
another one is n-1 where the array starts with 2nd element 
*/





#include <bits/stdc++.h>

//solution using tabular approach 

int solve(vector<int> &nums)
{
    int n = nums.size();
    vector<int> dp(n,0);

    dp[0] =nums[0];
    for(int i=1;i<=n;i++)
    {
        int incl = dp[i-2]+nums[i];
        int excl = dp[i-1]+0;

        dp[i] = max(incl,excl);
    }

    return dp[n-1];
}



int maximumNonAdjacentSum(vector<int> &nums){
    return solve(nums);


}
