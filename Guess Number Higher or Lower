/*
We are playing the Guessing Game. The game will work as follows:

I pick a number between 1 and n.
You guess a number.
If you guess the right number, you win the game.
If you guess the wrong number, then I will tell you whether the number I picked is higher or lower, and you will continue guessing.
Every time you guess a wrong number x, you will pay x dollars. If you run out of money, you lose the game.
Given a particular n, return the minimum amount of money you need to guarantee a win regardless of what number I pick.

 
 */
 
 class Solution {
public:

    int solve(int start, int end,vector<vector<int>>& dp)
    {
        //base case
        if(start >= end)
        return 0;

        if(dp[start][end] != -1)
        return dp[start][end];

        int maxi = INT_MAX;
        for(int i=start ;i <= end;i++)
        {
            maxi = min(maxi, i+ max(solve(start,i-1,dp) , solve(i+1, end,dp)));
        }

        return dp[start][end] = maxi;
    }

    int getMoneyAmount(int n) {
        vector<vector<int>> dp (n+1,vector<int> (n+1,-1));
        return solve(1,n,dp);

    }
};
